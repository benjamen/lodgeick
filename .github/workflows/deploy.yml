name: Deploy to Server

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup SSH Key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add Server to Known Hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H 77.37.87.141 >> ~/.ssh/known_hosts

      - name: Deploy to Frappe Server
        run: |
          ssh -o StrictHostKeyChecking=no frappe-user@77.37.87.141 "
            set -e
            echo '🚀 Starting Lodgeick deployment...'

            # Fix git ownership issue for the app folder
            git config --global --add safe.directory /home/frappe-user/frappe-bench/apps/lodgeick

            cd /home/frappe-user/frappe-bench/apps/lodgeick

            # Pull latest code from the GitHub repo
            echo '📥 Pulling latest code...'
            git remote remove origin 2>/dev/null || true
            git remote add origin https://github.com/benjamen/lodgeick.git
            git fetch origin main
            git reset --hard origin/main
            git clean -fd

            # Install/update frontend dependencies
            echo '📦 Installing frontend dependencies...'
            cd frontend
            yarn install --frozen-lockfile || yarn install

            # Build frontend
            echo '🔨 Building frontend...'
            yarn build

            # Build assets, migrate, clear cache, restart services
            cd /home/frappe-user/frappe-bench
            echo '🔨 Building assets...'
            bench build --app lodgeick
            echo '🗄️ Migrating database...'
            bench --site lodgeick.com migrate || echo 'Migration skipped or failed'
            echo '🧹 Clearing cache...'
            bench --site lodgeick.com clear-cache
            echo '🔄 Restarting services...'
            sudo supervisorctl restart all || bench restart || echo 'Restart attempted'

            # Give services time to restart
            sleep 5

            sudo systemctl reload nginx

            echo '✅ Lodgeick deployment completed successfully!'
            echo '🌐 Dashboard available at: https://lodgeick.com'
          "

      - name: Verify Deployment
        run: |
          echo '🔍 Verifying deployment...'
          sleep 10
          curl -f -s -o /dev/null https://lodgeick.com || {
            echo '❌ Site not accessible'
            exit 1
          }
          echo '✅ Site is accessible at https://lodgeick.com'
